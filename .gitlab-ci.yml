stages:
  - build
  - build_tag
  - deploy
 
image: docker:stable

variables:
  # DOCKER_HOST: 121.36.9.185:22
  NODE_BRANCH_IMAGE: $CI_PROJECT_NAME-node-$CI_COMMIT_REF_SLUG
  SERVER_BRANCH_IMAGE: $CI_PROJECT_NAME-server-$CI_COMMIT_REF_SLUG

before_script:
  - echo "开始"
  - echo $NODE_BRANCH_IMAGE:$CI_COMMIT_SHA
  - echo $SERVER_BRANCH_IMAGE:$CI_COMMIT_SHA

  # - docker info

build:
  stage: build 
  script:
    - docker build -t $NODE_BRANCH_IMAGE:$CI_COMMIT_SHA .
    - docker build -t $SERVER_BRANCH_IMAGE:$CI_COMMIT_SHA .
    - if [ $( docker images -q $NODE_BRANCH_IMAGE:latest) ]; then docker rmi -f $NODE_BRANCH_IMAGE:latest;fi
    - if [ $( docker ps -aq --filter name=$SERVER_BRANCH_IMAGE) ]; then docker stop $SERVER_BRANCH_IMAGE;fi
    - if [ $( docker images -q $SERVER_BRANCH_IMAGE:latest) ]; then docker rmi -f $SERVER_BRANCH_IMAGE:latest;fi
    - if [ $( docker ps -aq --filter name=$SERVER_BRANCH_IMAGE) ]; then docker start $SERVER_BRANCH_IMAGE;fi
  only:
    - master
  tags:
    - test

build_tag:
  stage: build_tag
  script:
    - docker tag $NODE_BRANCH_IMAGE:$CI_COMMIT_SHA $NODE_BRANCH_IMAGE:latest
    - docker tag $SERVER_BRANCH_IMAGE:$CI_COMMIT_SHA $SERVER_BRANCH_IMAGE:latest
    - if [ $( docker images -q $NODE_BRANCH_IMAGE:$CI_COMMIT_SHA) ]; then docker rmi -f $NODE_BRANCH_IMAGE:$CI_COMMIT_SHA;fi
    - if [ $( docker images -q $SERVER_BRANCH_IMAGE:$CI_COMMIT_SHA) ]; then docker rmi -f $SERVER_BRANCH_IMAGE:$CI_COMMIT_SHA;fi

  only:
    - master
  tags:
    - test
    
deploy:
  stage: deploy
  script:
    - if [ $( docker ps -aq --filter name=$SERVER_BRANCH_IMAGE) ]; then docker rm -f $SERVER_BRANCH_IMAGE;fi
    - docker run -it -d -p 3000:80 --name=$SERVER_BRANCH_IMAGE $SERVER_BRANCH_IMAGE:latest
  only:
    - master
  tags:
    - test